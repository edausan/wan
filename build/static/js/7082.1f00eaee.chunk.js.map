{"version":3,"file":"static/js/7082.1f00eaee.chunk.js","mappings":"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","sources":["components/Pages/Auth/Login.js","components/Pages/Auth/Signup.js","components/Pages/Auth/Splash.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import {\r\n  LoginOutlined,\r\n  Visibility,\r\n  VisibilityOff,\r\n  Brightness7,\r\n  Brightness4,\r\n} from '@mui/icons-material';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { useContext, useState } from 'react';\r\nimport { AppCtx } from '../../../App';\r\nimport { SignIn } from '../../../Firebase/authApi';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Box } from '@mui/system';\r\nimport WAN_LOGO from '../../../assets/WAN_LOGO.png';\r\nimport WAN_LOGO_WHITE from '../../../assets/WAN_LOGO_WHITE.png';\r\nimport WAN_LOGO_NEW from '../../../assets/WAN_LOGO_NEW.png';\r\n\r\nexport const blue = '#00addd';\r\nexport const pink = '#f51088';\r\n\r\nconst Login = ({ setScreen }) => {\r\n  const theme = useTheme();\r\n  const { setMode, mode, setCurrentUser, setIsLoggedIn } = useContext(AppCtx);\r\n  const [show, setShow] = useState(false);\r\n  const [user, setUser] = useState({ email: '', password: '' });\r\n  const [userId, setUserId] = useState(null);\r\n  const [isSigning, setIsSigning] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSignIn = async () => {\r\n    setIsSigning(true);\r\n    setError(null);\r\n    const response = await SignIn({\r\n      email: user.email,\r\n      password: user.password,\r\n    });\r\n\r\n    console.log({ response });\r\n\r\n    if (response.user?.auth) {\r\n      //   response.auth.currentUser.uid && setIsSigning(true);\r\n      setCurrentUser(response);\r\n      setUserId(response.user.uid);\r\n    } else {\r\n      console.log({ error: response });\r\n      const err_msg =\r\n        response.code === 'auth/email-already-in-use'\r\n          ? 'Email already in use'\r\n          : response.code === 'auth/wrong-password'\r\n          ? `The email or password that you've entered doesn't match any account.`\r\n          : response.code === 'auth/user-not-found'\r\n          ? `The email or password that you've entered doesn't match any account.`\r\n          : 'No internet connection.';\r\n      setError(err_msg);\r\n      setIsSigning(false);\r\n    }\r\n    // setCurrentUser(response.auth.currentUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => setMode(!mode)}\r\n        sx={{ position: 'fixed', left: 20, bottom: 20, zIndex: 1002 }}\r\n      >\r\n        {theme.palette.mode === 'dark' ? <Brightness7 /> : <Brightness4 />}\r\n      </IconButton>\r\n      <Card\r\n        sx={{\r\n          py: 4,\r\n          px: 4,\r\n          textAlign: 'center',\r\n          m: 2,\r\n          width: 'auto',\r\n          maxWidth: 345,\r\n          background: '#ffffff28',\r\n          backdropFilter: 'blur(5px)',\r\n          boxSizing: 'border-box',\r\n          boxShadow: '0 10px 30px -5px rgba(0,0,0,.3)',\r\n          zIndex: 1002,\r\n        }}\r\n      >\r\n        <Box sx={{ width: '100%', mb: 4 }}>\r\n          <img\r\n            // src={theme.palette.mode === \"dark\" ? WAN_LOGO_WHITE : WAN_LOGO}\r\n            src={WAN_LOGO_NEW}\r\n            alt='WAN | Belleview'\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Box>\r\n\r\n        {/* <Typography variant='body1' sx={{ mb: 2 }}>\r\n          LOGIN\r\n        </Typography> */}\r\n\r\n        {error && (\r\n          <Alert\r\n            severity='error'\r\n            sx={{ mb: 1, textAlign: 'left', fontSize: 12 }}\r\n            onClose={() => setError(null)}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Grid container spacing={2} className='mt-[-20%]'>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              variant='standard'\r\n              label='Email Address'\r\n              fullWidth\r\n              type='email'\r\n              disabled={isSigning}\r\n              onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n              //   sx={{\r\n              //     '&:autofill': { background: 'rgba(0,0,0,0)' },\r\n              //     '& > *:autofill': { background: 'rgba(0,0,0,0)' },\r\n              //   }}\r\n              className='autofill:bg-red-700'\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Input\r\n              variant='standard'\r\n              label='Password'\r\n              fullWidth\r\n              disabled={isSigning}\r\n              type={show ? 'text' : 'password'}\r\n              onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n              endAdornment={\r\n                <InputAdornment position='end'>\r\n                  <IconButton\r\n                    aria-label='toggle password visibility'\r\n                    onClick={() => setShow(!show)}\r\n                    onMouseDown={() => setShow(!show)}\r\n                    edge='end'\r\n                  >\r\n                    {show ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={12} sx={{ mt: 2 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={8} md={8}>\r\n                <LoadingButton\r\n                  color='primary'\r\n                  onClick={handleSignIn}\r\n                  loading={isSigning}\r\n                  loadingPosition='start'\r\n                  startIcon={<LoginOutlined />}\r\n                  variant='contained'\r\n                  fullWidth\r\n                  disableElevation\r\n                  disabled={!user.email || !user.password}\r\n                  // sx={{\r\n                  // \tbackground: !user.email || !user.password ? \"#ccc\" : `linear-gradient(45deg, ${pink}, ${blue})`\r\n                  // }}\r\n                >\r\n                  LOGIN\r\n                </LoadingButton>\r\n              </Grid>\r\n              <Grid item xs={4} md={4}>\r\n                <Button\r\n                  variant='text'\r\n                  fullWidth\r\n                  disabled={isSigning}\r\n                  onClick={() => setScreen('signup')}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import {\r\n  LoginOutlined,\r\n  Visibility,\r\n  VisibilityOff,\r\n  Brightness7,\r\n  Brightness4,\r\n} from '@mui/icons-material';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Typography,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { useContext, useState } from 'react';\r\nimport { AppCtx } from '../../../App';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { Box } from '@mui/system';\r\nimport WAN_LOGO from '../../../assets/WAN_LOGO.png';\r\nimport WAN_LOGO_WHITE from '../../../assets/WAN_LOGO_WHITE.png';\r\nimport { CreateAccount } from '../../../Firebase/authApi';\r\nimport { useEffect } from 'react';\r\n\r\nexport const Ministries = [\r\n  {\r\n    name: 'Jesus’ Army of Musicians (JAM)',\r\n    id: 'JAM',\r\n  },\r\n  {\r\n    name: 'Voices in Adoration (VIA)',\r\n    id: 'VIA',\r\n  },\r\n  {\r\n    name: 'TEAM (Triune, Elyondoulos, Acts, Movenerate)',\r\n    id: 'TEAM',\r\n  },\r\n  {\r\n    name: 'Multimedia Arts Network (MAN)',\r\n    id: 'MAN',\r\n  },\r\n];\r\n\r\nconst SignUp = ({ setScreen }) => {\r\n  const theme = useTheme();\r\n  const { setMode, mode, setCurrentUser, setIsLoggedIn } = useContext(AppCtx);\r\n  const [show, setShow] = useState(false);\r\n  const [user, setUser] = useState({\r\n    email: null,\r\n    password: null,\r\n    ministry: null,\r\n  });\r\n  const [userId, setUserId] = useState(null);\r\n  const [isSigning, setIsSigning] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log({ user });\r\n    if (user.email === 'admin.wan@gmail.com') {\r\n      setUser({ ...user, password: 'admin@wan', ministry: 'ADMIN' });\r\n    }\r\n  }, [user.email]);\r\n\r\n  const handleSignup = async () => {\r\n    setIsSigning(true);\r\n    setError(null);\r\n    try {\r\n      const response = await CreateAccount({ ...user });\r\n\r\n      console.log({ response });\r\n\r\n      if (response.auth) {\r\n        setUserId(response.auth.currentUser.uid);\r\n      } else {\r\n        const err_msg =\r\n          response.code === 'auth/email-already-in-use'\r\n            ? 'Email already in use'\r\n            : response.code === 'auth/wrong-password'\r\n            ? `The email or password that you've entered doesn't match any account.`\r\n            : response.code === 'auth/invalid-email'\r\n            ? 'Invalid Email'\r\n            : 'No internet connection.';\r\n        setError(err_msg);\r\n        setIsSigning(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const blue = '#00addd';\r\n  const pink = '#f51088';\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => setMode(!mode)}\r\n        sx={{ position: 'fixed', left: 20, bottom: 20, zIndex: 1002 }}\r\n      >\r\n        {theme.palette.mode === 'dark' ? <Brightness7 /> : <Brightness4 />}\r\n      </IconButton>\r\n      <Card\r\n        sx={{\r\n          py: 2,\r\n          px: 4,\r\n          textAlign: 'center',\r\n          m: 2,\r\n          width: 'auto',\r\n          maxWidth: 345,\r\n          background: '#ffffff22',\r\n          backdropFilter: 'blur(5px)',\r\n          boxSizing: 'border-box',\r\n          boxShadow: '0 10px 30px -5px rgba(0,0,0,.1)',\r\n          zIndex: 1002,\r\n        }}\r\n      >\r\n        <Box sx={{ width: '100%', mb: 4 }}>\r\n          <img\r\n            // src={theme.palette.mode === \"dark\" ? WAN_LOGO_WHITE : WAN_LOGO}\r\n            src={WAN_LOGO_WHITE}\r\n            alt='WAN | Belleview'\r\n            style={{ width: '100%' }}\r\n          />\r\n        </Box>\r\n        <Typography variant='body1' sx={{ mb: 2 }}>\r\n          SIGN UP\r\n        </Typography>\r\n\r\n        {error && (\r\n          <Alert\r\n            severity='error'\r\n            sx={{ mb: 1, textAlign: 'left', fontSize: 12 }}\r\n            onClose={() => setError(null)}\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              variant='standard'\r\n              label='Email Address'\r\n              fullWidth\r\n              type='email'\r\n              disabled={isSigning}\r\n              onChange={(e) => setUser({ ...user, email: e.target.value })}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <FormControl variant='standard' fullWidth>\r\n              <InputLabel id='password'>Password</InputLabel>\r\n              <Input\r\n                variant='standard'\r\n                label='Password'\r\n                labelId='password'\r\n                fullWidth\r\n                type={show ? 'text' : 'password'}\r\n                onChange={(e) => setUser({ ...user, password: e.target.value })}\r\n                disabled={isSigning}\r\n                endAdornment={\r\n                  <InputAdornment position='end'>\r\n                    <IconButton\r\n                      aria-label='toggle password visibility'\r\n                      onClick={() => setShow(!show)}\r\n                      onMouseDown={() => setShow(!show)}\r\n                      edge='end'\r\n                    >\r\n                      {show ? <VisibilityOff /> : <Visibility />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <FormControl variant='standard' fullWidth>\r\n              <InputLabel id='ministry'>Ministry</InputLabel>\r\n              <Select\r\n                labelId='ministry'\r\n                label='Ministry'\r\n                size='small'\r\n                sx={{ fontSize: 14 }}\r\n                onChange={(e) => setUser({ ...user, ministry: e.target.value })}\r\n              >\r\n                {Ministries.map((ministry) => {\r\n                  return (\r\n                    <MenuItem value={ministry.id}>{ministry.name}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12} sx={{ mt: 2 }}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={4} md={4}>\r\n                <LoadingButton\r\n                  color='primary'\r\n                  loadingPosition='start'\r\n                  variant='text'\r\n                  fullWidth\r\n                  disableElevation\r\n                  disabled={isSigning}\r\n                  onClick={() => setScreen('login')}\r\n                >\r\n                  Login\r\n                </LoadingButton>\r\n              </Grid>\r\n              <Grid item xs={8} md={8}>\r\n                <Button\r\n                  variant='contained'\r\n                  disableElevation\r\n                  fullWidth\r\n                  onClick={handleSignup}\r\n                  loading={isSigning}\r\n                  startIcon={<LoginOutlined />}\r\n                  sx={{\r\n                    background: blue,\r\n                  }}\r\n                  disabled={!user.email || !user.password || isSigning}\r\n                >\r\n                  Sign up\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { Button, Grid } from '@mui/material';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Box } from '@mui/system';\r\nimport WAN_LOGO_NEW from '../../../assets/WAN_LOGO_NEW.png';\r\nimport SPLASH_BG from '../../../assets/splash-bg.webp';\r\nimport Login from './Login';\r\nimport SignUp from './Signup';\r\n\r\nconst Splash = () => {\r\n  const [screen, setScreen] = useState('splash');\r\n\r\n  const blue = '#00addd';\r\n  const pink = '#f51088';\r\n\r\n  useEffect(() => {\r\n    // history.push(`/profile/${currentUser.user?.uid || params.id}`);\r\n  }, []);\r\n\r\n  const Screen = () => {\r\n    switch (screen) {\r\n      case 'splash':\r\n        return SplashScreen;\r\n      case 'login':\r\n        return <Login setScreen={setScreen} />;\r\n      case 'signup':\r\n        return <SignUp setScreen={setScreen} />;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const SplashScreen = (\r\n    <>\r\n      <Box\r\n        className='w-full max-w-[500px] text-center z-[1002] flex justify-center'\r\n        // sx={{ width: '100%', maxWidth: 500, textAlign: 'center', zIndex: 1002 }}\r\n      >\r\n        <img\r\n          src={WAN_LOGO_NEW}\r\n          alt='WAN | Belleview'\r\n          style={{ width: '80%' }}\r\n        />\r\n      </Box>\r\n\r\n      <Grid\r\n        container\r\n        flexDirection='column'\r\n        spacing={2}\r\n        sx={{ p: 4, width: '100%', maxWidth: 345, zIndex: 1002 }}\r\n      >\r\n        <Grid item>\r\n          <Button\r\n            variant='outlined'\r\n            fullWidth\r\n            sx={{\r\n              color: '#fff',\r\n              borderColor: '#fff',\r\n              borderRadius: 25,\r\n            }}\r\n            disableElevation\r\n            onClick={() => setScreen('signup')}\r\n          >\r\n            SIGN UP\r\n          </Button>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            disableElevation\r\n            variant='contained'\r\n            className='bg-white text-black rounded-[25px]'\r\n            fullWidth\r\n            onClick={() => setScreen('login')}\r\n          >\r\n            LOGIN\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      justifyContent='center'\r\n      alignItems='center'\r\n      flexDirection='column'\r\n      sx={{\r\n        height: '100vh',\r\n        background: `url(${SPLASH_BG})`,\r\n        backgroundSize: 'cover',\r\n        position: 'relative',\r\n        '&::before': {\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          content: '\"\"',\r\n          width: '100%',\r\n          height: '100%',\r\n          background: `linear-gradient(45deg, ${pink}, ${blue})`,\r\n          zIndex: 1001,\r\n          opacity: 0.5,\r\n          backgroundBlendMode: 'overlay',\r\n        },\r\n      }}\r\n    >\r\n      {Screen()}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(Splash);\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["blue","pink","setScreen","theme","useTheme","useContext","AppCtx","setMode","mode","setCurrentUser","setIsLoggedIn","useState","show","setShow","email","password","user","setUser","setUserId","isSigning","setIsSigning","error","setError","handleSignIn","SignIn","response","console","log","auth","uid","err_msg","code","onClick","sx","position","left","bottom","zIndex","palette","py","px","textAlign","m","width","maxWidth","background","backdropFilter","boxSizing","boxShadow","mb","src","WAN_LOGO_NEW","alt","style","severity","fontSize","onClose","container","spacing","className","item","xs","md","variant","label","fullWidth","type","disabled","onChange","e","target","value","endAdornment","onMouseDown","edge","mt","color","loading","loadingPosition","startIcon","disableElevation","Ministries","name","id","ministry","useEffect","handleSignup","CreateAccount","currentUser","message","WAN_LOGO_WHITE","labelId","size","map","Splash","screen","SplashScreen","flexDirection","p","borderColor","borderRadius","justifyContent","alignItems","height","SPLASH_BG","backgroundSize","top","content","opacity","backgroundBlendMode","Screen","React","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined"],"sourceRoot":""}