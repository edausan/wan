{"version":3,"file":"static/js/9979.83ea0e5d.chunk.js","mappings":"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","sources":["components/Modals/Chords.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js"],"sourcesContent":["import {\r\n  TextField,\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  Button,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { UpdateChords } from '../../Firebase/songsApi';\r\n\r\nconst Chords = ({ setCardData, cardData, category, setOpen }) => {\r\n  const [chords, setChords] = useState({\r\n    verse: null,\r\n    pre_chorus: null,\r\n    chorus: null,\r\n  });\r\n\r\n  const [updating, setUpdating] = useState(false);\r\n  const [updated, setUpdated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log({ Chords: cardData });\r\n  }, [cardData]);\r\n\r\n  useEffect(() => {\r\n    if (cardData.chords?.verse) {\r\n      console.log(cardData.chords);\r\n      setChords(cardData.chords);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setCardData((data) => ({ ...data, chords }));\r\n  }, [chords]);\r\n\r\n  const handleSaveChords = async () => {\r\n    try {\r\n      setUpdating(true);\r\n      const res = await UpdateChords({ id: cardData.id, chords });\r\n      console.log({ res });\r\n      setUpdating(false);\r\n      setUpdated(true);\r\n\r\n      setTimeout(() => {\r\n        setUpdated(false);\r\n      }, 1000);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={updated}\r\n        autoHideDuration={1000}\r\n        // onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert severity='success' sx={{ width: '100%' }}>\r\n          Chords Successfully Updated!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Card\r\n        sx={{\r\n          width: '90%',\r\n          position: 'absolute',\r\n          top: '30%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          p: 2,\r\n          pb: 0,\r\n          boxSizing: 'border-box',\r\n          // minHeight: 500,\r\n        }}\r\n      >\r\n        <Typography variant='h6' sx={{ mb: 2 }}>\r\n          {cardData.title || category.label} <small>| Chords</small>\r\n        </Typography>\r\n\r\n        <TextField\r\n          label='Verse'\r\n          fullWidth\r\n          variant='standard'\r\n          multiline\r\n          value={chords.verse}\r\n          onChange={(e) => setChords({ ...chords, verse: e.target.value })}\r\n          sx={{ mb: 2 }}\r\n          disabled={updating}\r\n        />\r\n        <TextField\r\n          label='Pre-chorus'\r\n          fullWidth\r\n          variant='standard'\r\n          multiline\r\n          value={chords.pre_chorus}\r\n          sx={{ mb: 2 }}\r\n          onChange={(e) => setChords({ ...chords, pre_chorus: e.target.value })}\r\n          disabled={updating}\r\n        />\r\n        <TextField\r\n          label='Chorus'\r\n          fullWidth\r\n          variant='standard'\r\n          multiline\r\n          value={chords.chorus}\r\n          onChange={(e) => setChords({ ...chords, chorus: e.target.value })}\r\n          disabled={updating}\r\n        />\r\n        <CardActions\r\n          className='mt-2 px-0 pb-4 justify-end'\r\n          // sx={{ justifyContent: 'right', mt: 2 }}\r\n        >\r\n          {cardData.id && !cardData.is_new ? (\r\n            <button\r\n              className='py-1 px-3 bg-green-600 text-white rounded-md'\r\n              onClick={handleSaveChords}\r\n              disabled={updating}\r\n            >\r\n              Save Chords\r\n            </button>\r\n          ) : (\r\n            <Button\r\n              size='small'\r\n              onClick={() =>\r\n                setOpen({ id: null, status: false, song_title: null })\r\n              }\r\n            >\r\n              Done\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chords;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;"],"names":["setCardData","cardData","category","setOpen","useState","verse","pre_chorus","chorus","chords","setChords","updating","setUpdating","updated","setUpdated","useEffect","console","log","Chords","data","handleSaveChords","UpdateChords","id","res","setTimeout","message","open","autoHideDuration","anchorOrigin","vertical","horizontal","severity","sx","width","position","top","left","transform","p","pb","boxSizing","variant","mb","title","label","fullWidth","multiline","value","onChange","e","target","disabled","className","is_new","onClick","size","status","song_title","getCardActionsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardActionsRoot","styled","name","overridesResolver","props","styles","ownerState","root","disableSpacing","spacing","_extends","display","alignItems","padding","marginLeft","React","inProps","ref","useThemeProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx"],"sourceRoot":""}