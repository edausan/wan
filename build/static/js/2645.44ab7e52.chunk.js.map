{"version":3,"file":"static/js/2645.44ab7e52.chunk.js","mappings":"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","sources":["components/Lineup/EditLineup.js","data.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  createContext,\r\n  lazy,\r\n} from 'react';\r\nimport { Grid, TextField, Card, Snackbar, Alert } from '@mui/material';\r\n\r\nimport { LINEUP } from '../../data';\r\nimport { AppCtx } from '../../App';\r\nimport MobileDatePicker from '@mui/lab/MobileDatePicker';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport { AdapterMoment } from '@mui/x-date-pickers/AdapterMoment';\r\nimport {\r\n  GetSingleLineup,\r\n  RealtimeSongs,\r\n  UpdateLineup,\r\n} from '../../Firebase/songsApi';\r\nimport moment from 'moment';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\n\r\nimport { getAuth } from 'firebase/auth';\r\nimport { FirebaseApp } from '../../Firebase';\r\nimport { SaveTwoTone } from '@mui/icons-material';\r\n\r\nconst Service = lazy(() => import('./Service'));\r\nconst LineupCard = lazy(() => import('./LineupCard'));\r\n\r\nexport const EditLineupCtx = createContext(null);\r\n\r\nconst NewLineup = () => {\r\n  const params = useParams();\r\n  const auth = getAuth(FirebaseApp);\r\n  const user = auth.currentUser;\r\n  const history = useHistory();\r\n\r\n  const { scrollToTop } = useContext(AppCtx);\r\n  const [date, setDate] = useState(new Date());\r\n  const [lineupData, setLineupData] = useState([]);\r\n  const [saving, setSaving] = useState(false);\r\n  const [saved, setSaved] = useState(false);\r\n  const [service, setService] = useState(null);\r\n  const [songs, setSongs] = useState([]);\r\n  const [openService, setOpenService] = useState(false);\r\n\r\n  const { data } = RealtimeSongs();\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n    data && setSongs(data);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    getSundayOfCurrentWeek();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (params.id && data.length > 0) GetLineup();\r\n  }, [params.id, data]);\r\n\r\n  const GetLineup = async () => {\r\n    try {\r\n      const lineup = await GetSingleLineup({ id: params.id });\r\n      console.log({ GetLineup_songs_data: data });\r\n      if (lineup) {\r\n        console.log({ lineup });\r\n        setService(lineup?.service);\r\n        setDate(lineup?.date);\r\n        if (data?.length > 0) {\r\n          const lineupda_data = lineup?.songs.map((song) => {\r\n            console.log({ song });\r\n            const song_data = data.filter((s) => s.id === song.id)[0];\r\n            return { ...song, ...song_data };\r\n          });\r\n\r\n          const updated = LINEUP.map((l) => {\r\n            const f = lineupda_data.filter((d) => d.label === l.label)[0];\r\n            if (f) {\r\n              return f;\r\n            }\r\n            return l;\r\n          });\r\n\r\n          setLineupData(updated);\r\n        }\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log({ EDIT: lineupData });\r\n  }, [lineupData]);\r\n\r\n  const handleDateChange = (newValue) => {\r\n    setDate(newValue);\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    setSaving(true);\r\n\r\n    const data = {\r\n      id: params.id,\r\n      lineup: {\r\n        service,\r\n        songs: lineupData,\r\n        date: moment(date).format('LLLL'),\r\n        date_updated: moment(new Date()).format('LLLL'),\r\n        updated_by: {\r\n          email: user.email,\r\n          uid: user.uid,\r\n          displayName: user.displayName,\r\n          photoURL: user.photoURL,\r\n        },\r\n      },\r\n    };\r\n\r\n    console.log({ data });\r\n\r\n    await UpdateLineup(data);\r\n\r\n    setTimeout(() => {\r\n      setSaving(false);\r\n      setSaved(true);\r\n\r\n      setTimeout(() => {\r\n        setSaved(false);\r\n        history.push('/lineup');\r\n      }, 1000);\r\n    }, 1000);\r\n  };\r\n\r\n  const getSundayOfCurrentWeek = () => {\r\n    const today = new Date();\r\n    const first = today.getDate() - today.getDay() + 1;\r\n    const last = first + 6;\r\n\r\n    const sunday = new Date(today.setDate(last));\r\n    setDate(sunday);\r\n    return sunday;\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setSaved(false);\r\n  };\r\n\r\n  return (\r\n    <section\r\n      style={{\r\n        position: 'relative',\r\n        paddingBottom: 100,\r\n      }}\r\n    >\r\n      <Snackbar\r\n        open={saved}\r\n        autoHideDuration={1000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n          {params.id\r\n            ? 'Lineup successfully updated'\r\n            : 'New Lineup successfully created!'}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {lineupData?.length > 0 && lineupData[2]?.title && service && (\r\n        <button\r\n          className=\"fixed bottom-[86px] right-[26px] w-[40px] h-[40px]  bg-green-500 text-white rounded-full z-50\"\r\n          onClick={handleUpdate}\r\n          disabled={saving}\r\n        >\r\n          <span className=\"motion-safe:animate-ping absolute top-0 left-0 w-[100%] h-[100%] bg-green-500 text-black rounded-full z-40 opacity-30\"></span>\r\n          <SaveTwoTone />\r\n        </button>\r\n      )}\r\n\r\n      <Grid container justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={12} md={12}>\r\n          <Card sx={{ p: 2, mb: 2 }}>\r\n            {/* <FormControl fullWidth variant=\"standard\" required sx={{mb: 2}}>\r\n\t\t\t\t\t\t\t<InputLabel id=\"service-type\">Service</InputLabel>\r\n\t\t\t\t\t\t\t<Select labelId=\"service-type\" value={service} onChange={e => setService(e.target.value)}>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"Worship Service | Belleview\">Worship Service | Belleview</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"Worship Service | Lumina\">Worship Service | Lumina</MenuItem>\r\n\t\t\t\t\t\t\t\t<MenuItem value=\"Youth Service\">Youth Service</MenuItem>\r\n\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t</FormControl> */}\r\n\r\n            <button\r\n              onClick={() => setOpenService(true)}\r\n              className=\"p-2 w-full bg-sky-400 rounded-md mb-4\"\r\n            >\r\n              {service ? service : 'Select Worship Service'}\r\n            </button>\r\n\r\n            <Service\r\n              setOpen={setOpenService}\r\n              open={openService}\r\n              service={service}\r\n              setService={setService}\r\n            />\r\n\r\n            <LocalizationProvider dateAdapter={AdapterMoment}>\r\n              <MobileDatePicker\r\n                required\r\n                inputFormat=\"dddd LL\"\r\n                label=\"Date\"\r\n                value={date}\r\n                onChange={(value) => handleDateChange(value)}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    variant=\"standard\"\r\n                  />\r\n                )}\r\n              />\r\n            </LocalizationProvider>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={12}>\r\n          {/* <NewLineupCtx.Provider value={{songs, saving, setLineupData, setOpen}}> */}\r\n          {lineupData?.length > 0 &&\r\n            songs?.length > 0 &&\r\n            LINEUP.map((category, idx) => {\r\n              return (\r\n                <LineupCard\r\n                  key={category.id + idx}\r\n                  setLineupData={setLineupData}\r\n                  category={category}\r\n                  songs={songs}\r\n                  songData={\r\n                    lineupData.filter((s) => s?.label === category.label)[0]\r\n                  }\r\n                  saving={saving}\r\n                />\r\n              );\r\n            })}\r\n          {/* </NewLineupCtx.Provider> */}\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default React.memo(NewLineup);\r\n","const VIA = [\r\n  {\r\n    id: 'via-1',\r\n    name: 'Nikki Cueno',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n  {\r\n    id: 'via-2',\r\n    name: 'Justine Judilla',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n  {\r\n    id: 'via-3',\r\n    name: 'Eunice Nikki Floralde',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n  {\r\n    id: 'via-4',\r\n    name: 'John Pallan',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n  {\r\n    id: 'via-5',\r\n    name: 'Diane Agreda',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n  {\r\n    id: 'via-6',\r\n    name: 'Reisel Ann Cayao',\r\n    is_available: true,\r\n    is_wl: false,\r\n  },\r\n];\r\n\r\nconst LINEUP = [\r\n  {\r\n    id: 'os-1',\r\n    label: 'Opening Song',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n  {\r\n    id: 'ws-1',\r\n    label: 'Welcome Song',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'js-1',\r\n    label: 'Joyful Song #1',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'js-2',\r\n    label: 'Joyful Song #2',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'js-3',\r\n    label: 'Joyful Song #3',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'ss-1',\r\n    label: 'Solemn Song #1',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n  {\r\n    id: 'ss-2',\r\n    label: 'Solemn Song #2',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n  {\r\n    id: 'ss-3',\r\n    label: 'Solemn Song #3',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n  {\r\n    id: 'ps-1',\r\n    label: 'Pastoral Song',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n  {\r\n    id: 'vs-1',\r\n    label: 'Victory Song',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'vs-2',\r\n    label: 'Victory Song #2',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'vs-3',\r\n    label: 'Victory Song #3',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: false,\r\n    tags: ['Joyful'],\r\n  },\r\n  {\r\n    id: 'cs-1',\r\n    label: 'Closing Song',\r\n    artist: null,\r\n    album: null,\r\n    lyrics: null,\r\n    chords: null,\r\n    media: null,\r\n    song: null,\r\n    disabled: false,\r\n    is_solemn: true,\r\n    tags: ['Solemn'],\r\n  },\r\n];\r\n\r\nconst ASSIGNER = 'k4gcy3yNWqa02aUfhw8J4fn7sS63';\r\nconst ADMIN = 'Hfhcau8TAiXR4T4FEAXp7eipDvz2';\r\nconst JIL_ADMIN = '46NVNKry9DhU1tTX3QrmM1OjudA3';\r\n\r\nconst Glass = (theme) => ({\r\n  background: `${theme.palette.background.paper}90`,\r\n  backdropFilter: 'blur(5px)',\r\n});\r\n\r\nexport { VIA, LINEUP, Glass, ASSIGNER, ADMIN, JIL_ADMIN };\r\n"],"names":["Service","lazy","LineupCard","EditLineupCtx","createContext","NewLineup","params","useParams","user","getAuth","FirebaseApp","currentUser","history","useHistory","scrollToTop","useContext","AppCtx","useState","Date","date","setDate","lineupData","setLineupData","saving","setSaving","saved","setSaved","service","setService","songs","setSongs","openService","setOpenService","data","RealtimeSongs","useEffect","getSundayOfCurrentWeek","id","length","GetLineup","GetSingleLineup","lineup","console","log","GetLineup_songs_data","lineupda_data","map","song","song_data","filter","s","updated","LINEUP","l","f","d","label","EDIT","handleUpdate","moment","format","date_updated","updated_by","email","uid","displayName","photoURL","UpdateLineup","setTimeout","push","today","last","getDate","getDay","sunday","handleClose","style","position","paddingBottom","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","sx","width","title","className","onClick","disabled","container","justifyContent","spacing","item","xs","md","p","mb","setOpen","dateAdapter","AdapterMoment","required","inputFormat","value","onChange","renderInput","fullWidth","size","variant","category","idx","songData","React","artist","album","lyrics","chords","media","is_solemn","tags","ASSIGNER","ADMIN","JIL_ADMIN"],"sourceRoot":""}