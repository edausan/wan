{"version":3,"file":"static/js/929.4deb21e5.chunk.js","mappings":"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","sources":["components/CustomComponents/LoadingScreen.js","components/Pages/Songs/AlbumCover.js","components/Pages/Songs/NewTag.js","components/Pages/Songs/EditSong.js","components/Pages/Songs/EditSongTabs.js","hooks/useResize.js"],"sourcesContent":["import { CircularProgress, Dialog } from '@mui/material';\r\nimport React from 'react';\r\nimport LoadingGif from '../../assets/Loading.gif';\r\n\r\nconst LoadingScreen = ({ status, text }) => {\r\n  return (\r\n    <Dialog open={status}>\r\n      <div className='flex flex-col items-center p-0 relative max-w-[150px]'>\r\n        {/* <CircularProgress /> */}\r\n        <img src={LoadingGif} alt='' className='w-[100%]' />\r\n        <span className='w-full text-center animate-pulse text-black text-xs mt-2 absolute bottom-[8px] left-[50%] translate-x-[-50%]'>\r\n          {text} Please Wait.\r\n        </span>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { AddAPhotoOutlined } from '@mui/icons-material';\r\nimport {\r\n  ImageList,\r\n  ImageListItem,\r\n  ImageListItemBar,\r\n  Skeleton,\r\n  SwipeableDrawer,\r\n} from '@mui/material';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSongs } from '../../../redux/slices/songsSlice';\r\n\r\nconst AlbumCover = ({\r\n  open,\r\n  setOpen,\r\n  setSelectedCover,\r\n  selectedCover,\r\n  setImage,\r\n  resized,\r\n}) => {\r\n  const { albumCovers } = useSelector(selectSongs);\r\n  const [img, setImg] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setImage(img);\r\n  }, [img]);\r\n\r\n  const handleSelect = (cover) => {\r\n    if (cover?.photoURL === selectedCover?.photoURL) {\r\n      setSelectedCover(null);\r\n    } else {\r\n      setSelectedCover(cover);\r\n      setOpen(false);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const upload = document.querySelector('#upload-cover-new');\r\n    upload.click();\r\n  };\r\n\r\n  const covers = resized\r\n    ? [...albumCovers, { name: img?.name, photoURL: resized }]\r\n    : albumCovers;\r\n\r\n  return (\r\n    <SwipeableDrawer anchor='bottom' open={open} onClose={() => setOpen(false)}>\r\n      <div className='p-4'>\r\n        <ImageList variant='masonry' cols={3} gap={6}>\r\n          {covers.map((cover) => (\r\n            <ImageListItem\r\n              key={cover.photoURL}\r\n              onClick={() => handleSelect(cover)}\r\n              className={`${\r\n                selectedCover?.name === cover?.name\r\n                  ? 'border border-sky-500'\r\n                  : ''\r\n              }`}\r\n            >\r\n              <LazyLoadImage\r\n                alt={cover?.name}\r\n                effect='blur'\r\n                placeholder={<Skeleton variant='rectangular' height={100} />}\r\n                src={cover?.photoURL}\r\n              />\r\n              {/* <img\r\n                src={`${cover.photoURL}`}\r\n                srcSet={`${cover.photoURL}`}\r\n                alt={cover.name}\r\n                loading='lazy'\r\n              /> */}\r\n              <ImageListItemBar\r\n                title={<span className='text-xs'>{cover.name}</span>}\r\n              />\r\n            </ImageListItem>\r\n          ))}\r\n        </ImageList>\r\n      </div>\r\n      {/* <div className='flex flex-wrap items-start gap-4 h-[calc(60vh-50px)] max-h-[calc(60vh-50px)] overflow-x-auto p-4'>\r\n        {[...covers, ...covers].map((cover) => {\r\n          return (\r\n            <div key={cover.photoURL} className='w-[30%]'>\r\n              <Card\r\n                onClick={() => handleSelect(cover)}\r\n                className={`${\r\n                  selectedCover?.name === cover?.name\r\n                    ? 'border border-sky-500'\r\n                    : ''\r\n                }`}\r\n              >\r\n                <CardMedia image={cover.photoURL} component='img' />\r\n                <CardContent className='p-2 !pb-2 !pt-2 '>\r\n                  <div className='text-xs text-center'>{cover.name}</div>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          );\r\n        })}\r\n      </div> */}\r\n      <div className='flex items-center justify-center'>\r\n        <input\r\n          type='file'\r\n          id='upload-cover-new'\r\n          accept='image/*'\r\n          className='hidden'\r\n          onChange={(e) => setImg(e.target.files[0])}\r\n        />\r\n        {/* <label htmlFor='upload-cover'> */}\r\n        <button\r\n          onClick={handleClick}\r\n          className='p-2 text-sky-300 flex flex-row gap-2 items-center'\r\n        >\r\n          <AddAPhotoOutlined />\r\n          Upload Album Cover\r\n        </button>\r\n        {/* </label> */}\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default AlbumCover;\r\n","import { ClearOutlined, SaveOutlined } from '@mui/icons-material';\r\nimport { IconButton, TextField } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useCallback } from 'react';\r\n\r\nconst NewSongTag = ({ tagExist, setEditDetails, handleAddTag }) => {\r\n  const [tag, setTag] = useState(null);\r\n\r\n  // const handleAddTag = () => {\r\n  //   setNewTag(tag);\r\n  // };\r\n\r\n  return (\r\n    <div className='px-4 py-2 flex flex-row'>\r\n      <TextField\r\n        fullWidth\r\n        variant='standard'\r\n        size='small'\r\n        label='New Tag'\r\n        className='TAG [&>label]:text-sm [&>div>input]:text-sm'\r\n        onChange={(e) => setTag(e.target.value)}\r\n        error={tagExist}\r\n        helperText={tagExist ? 'Tag already exists.' : ''}\r\n      />\r\n      <IconButton onClick={() => handleAddTag(tag)} disabled={!tag || tagExist}>\r\n        <SaveOutlined className='w-[18px] h-[18px]' />\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={() =>\r\n          setEditDetails((editDetails) => ({\r\n            ...editDetails,\r\n            tag: false,\r\n          }))\r\n        }\r\n      >\r\n        <ClearOutlined className='w-[18px] h-[18px]' />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewSongTag;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  AddAPhotoOutlined,\r\n  ClearOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  SaveOutlined,\r\n} from '@mui/icons-material';\r\nimport {\r\n  Alert,\r\n  Button,\r\n  Chip,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  Snackbar,\r\n  SwipeableDrawer,\r\n  TextField,\r\n} from '@mui/material';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport {\r\n  UpdateSongDetails,\r\n  UploadAlbumCover,\r\n} from '../../../Firebase/songsApi';\r\nimport useResize from '../../../hooks/useResize';\r\nimport EditSongTabs from './EditSongTabs';\r\nimport ALBUM_PLACEHOLDER from '../../../assets/music_placeholder.jpg';\r\nimport AlbumCover from './AlbumCover';\r\nimport LoadingScreen from '../../CustomComponents/LoadingScreen';\r\nimport { useCallback } from 'react';\r\nimport NewSongTag from './NewTag';\r\n\r\nconst EditSong = ({ drawer, setOpen, handleCover, isNew }) => {\r\n  const { resized, processfile } = useResize({ quality: 0.9 });\r\n  const { song, status } = drawer;\r\n  const [editTitle, setEditTitle] = useState(true);\r\n  const [editDetails, setEditDetails] = useState({\r\n    artist: true,\r\n    album: true,\r\n    lyrics: true,\r\n    chords: true,\r\n    media: true,\r\n    tag: false,\r\n  });\r\n\r\n  const [songDetails, setSongDetails] = useState({\r\n    cover: song?.cover || null,\r\n    title: song?.title || null,\r\n    album: song?.album || null,\r\n    lyrics: {\r\n      verse: null,\r\n      pre_chorus: null,\r\n      chorus: null,\r\n      ...song?.lyrics,\r\n    },\r\n    chords: {\r\n      verse: null,\r\n      pre_chorus: null,\r\n      chorus: null,\r\n      ...song?.chords,\r\n    },\r\n    media: {\r\n      youtube: song?.media?.youtube,\r\n      spotify: song?.media?.spotify,\r\n    },\r\n    tags: song?.tags || [],\r\n  });\r\n\r\n  const [newTag, setNewTag] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [photoURL, setPhotoURL] = useState(null);\r\n  const [updating, setUpdating] = useState(false);\r\n  const [updated, setUpdated] = useState(false);\r\n  const [tagExist, setTagExist] = useState(false);\r\n  const [openCovers, setOpenCovers] = useState(false);\r\n  const [selectedCover, setSelectedCover] = useState(null);\r\n  const [showLyrics, setShowLyrics] = useState(false);\r\n\r\n  const memoizedUpdating = useMemo(() => updating, [updating]);\r\n  const new_tag = useMemo(() => newTag, [newTag]);\r\n  const memoizedSong = useMemo(\r\n    () => ({\r\n      lyrics: songDetails.lyrics,\r\n      chords: songDetails.chords,\r\n      media: songDetails.media,\r\n    }),\r\n    [songDetails.lyrics, songDetails.chords, songDetails.media]\r\n  );\r\n\r\n  const handleSetSongDetails = useCallback((value) => {\r\n    setSongDetails(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    image && processfile(image);\r\n  }, [image]);\r\n\r\n  useEffect(() => {\r\n    resized && handleUploadCover();\r\n  }, [resized]);\r\n\r\n  useEffect(() => {\r\n    setSongDetails({ ...songDetails, cover: photoURL });\r\n  }, [photoURL]);\r\n\r\n  const handleUploadCover = async () => {\r\n    try {\r\n      const { photoURL } = await UploadAlbumCover({\r\n        id: image.name,\r\n        image: resized,\r\n      });\r\n      setPhotoURL(photoURL);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSongDetails({ ...songDetails, cover: selectedCover?.photoURL });\r\n  }, [selectedCover]);\r\n\r\n  useEffect(() => {\r\n    if (updating) {\r\n      setEditDetails({\r\n        artist: true,\r\n        album: true,\r\n        lyrics: true,\r\n        chords: true,\r\n        media: true,\r\n        tag: false,\r\n      });\r\n      setEditTitle(true);\r\n    }\r\n  }, [updating]);\r\n\r\n  useEffect(() => {\r\n    setSongDetails({\r\n      ...song,\r\n      lyrics: {\r\n        verse: null,\r\n        pre_chorus: null,\r\n        chorus: null,\r\n        ...song?.lyrics,\r\n      },\r\n      chords: {\r\n        verse: null,\r\n        pre_chorus: null,\r\n        chorus: null,\r\n        ...song?.chords,\r\n      },\r\n      media: {\r\n        youtube: null,\r\n        spotify: null,\r\n        ...song?.media,\r\n      },\r\n    });\r\n  }, [song]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setEditDetails({\r\n        ...editDetails,\r\n        tag: false,\r\n      });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    !status && setShowLyrics(false);\r\n  }, [status]);\r\n\r\n  useEffect(() => {\r\n    const idx = songDetails?.tags?.findIndex(\r\n      (tag) => tag?.toLowerCase() === new_tag?.toLowerCase()\r\n    );\r\n    if (idx >= 0) {\r\n      setTagExist(true);\r\n    } else {\r\n      setTagExist(false);\r\n    }\r\n  }, [new_tag]);\r\n\r\n  const handleSave = useCallback(\r\n    () => async () => {\r\n      setUpdating(true);\r\n      try {\r\n        await UpdateSongDetails({ song: songDetails });\r\n        setUpdating(false);\r\n        setUpdated(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setUpdated(false);\r\n        }, 1000);\r\n      } catch (error) {\r\n        setUpdating(false);\r\n        console.log(error.message);\r\n      }\r\n    },\r\n    [songDetails]\r\n  );\r\n\r\n  const handleDeleteTag = (tag) => {\r\n    const filtered = songDetails.tags.filter((t) => t !== tag);\r\n    setSongDetails({ ...songDetails, tags: filtered });\r\n  };\r\n\r\n  const handleAddTag = useCallback(\r\n    (tag) => {\r\n      console.log({ tag });\r\n      if (!tagExist && tag) {\r\n        setEditDetails({\r\n          ...editDetails,\r\n          tag: false,\r\n        });\r\n\r\n        const tagArr = tag.split(' ');\r\n\r\n        for (var i = 0; i < tagArr.length; i++) {\r\n          tagArr[i] = tagArr[i].charAt(0).toUpperCase() + tagArr[i].slice(1);\r\n        }\r\n\r\n        const tag_arr = tagArr.join(' ');\r\n\r\n        setSongDetails({\r\n          ...songDetails,\r\n          tags: [...songDetails.tags, tag_arr],\r\n        });\r\n      }\r\n    },\r\n    [tagExist, songDetails]\r\n  );\r\n\r\n  console.log('EDTI SONG');\r\n\r\n  return (\r\n    <>\r\n      <AlbumCover\r\n        open={openCovers}\r\n        setOpen={setOpenCovers}\r\n        setSelectedCover={setSelectedCover}\r\n        selectedCover={selectedCover}\r\n        setImage={setImage}\r\n        resized={resized}\r\n      />\r\n      <LoadingScreen status={updating} text='Updating, ' />\r\n      <SwipeableDrawer\r\n        anchor='bottom'\r\n        open={status}\r\n        onClose={() => setOpen(false)}\r\n        className='max-w-[680px] [&>.MuiDrawer-paper]:items-center'\r\n      >\r\n        <div className='max-w-[680px] m-x-auto w-full'>\r\n          <Snackbar\r\n            anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n            open={updated}\r\n            autoHideDuration={1000}\r\n            onClose={() => setUpdated(false)}\r\n          >\r\n            <Alert severity='success' sx={{ width: '100%' }}>\r\n              {song?.title} is successfully updated!\r\n            </Alert>\r\n          </Snackbar>\r\n          <div className='flex flex-row gap-2 bg-black/40 items-center'>\r\n            <div className='w-[70px] relative'>\r\n              {/* <input\r\n              type='file'\r\n              id='upload-cover'\r\n              accept='image/*'\r\n              className='hidden'\r\n              onChange={(e) => setImage(e.target.files[0])}\r\n            /> */}\r\n              <label\r\n                htmlFor='upload-cover'\r\n                className='absolute top-[50%] left-[50%] translate-x-[-50%] translate-y-[-50%] z-10'\r\n              >\r\n                <IconButton\r\n                  component='span'\r\n                  className='bg-black/50 z-10'\r\n                  onClick={() => setOpenCovers(true)}\r\n                >\r\n                  <AddAPhotoOutlined />\r\n                </IconButton>\r\n              </label>\r\n\r\n              <img\r\n                src={songDetails?.cover || ALBUM_PLACEHOLDER}\r\n                alt=''\r\n                className='w-full'\r\n              />\r\n            </div>\r\n            <div className='p-2 box-border flex-1'>\r\n              <FormControl size='small' variant='standard' fullWidth>\r\n                <InputLabel>Song Title</InputLabel>\r\n                <Input\r\n                  multiline\r\n                  disabled={editTitle}\r\n                  defaultValue={song?.title}\r\n                  onChange={(e) =>\r\n                    handleSetSongDetails({\r\n                      ...songDetails,\r\n                      title: e.target.value,\r\n                    })\r\n                  }\r\n                  endAdornment={\r\n                    <InputAdornment position='end'>\r\n                      <IconButton\r\n                        aria-label='song title'\r\n                        onClick={() => setEditTitle(!editTitle)}\r\n                      >\r\n                        {editTitle ? (\r\n                          <EditOutlined className='w-[18x] h-[18px]' />\r\n                        ) : (\r\n                          <CloseOutlined className='w-[18x] h-[18px]' />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  className={`INPUT [&>textarea]:text-xs ${\r\n                    editTitle ? '[&::before]:border-0' : ''\r\n                  }`}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='p-4 grid grid-cols-2 gap-4 space-y-0'>\r\n            <div className='col-span-1'>\r\n              <FormControl size='small' variant='standard' fullWidth>\r\n                <InputLabel>Artist</InputLabel>\r\n                <Input\r\n                  multiline\r\n                  disabled={editDetails.artist}\r\n                  defaultValue={song?.artist}\r\n                  onChange={(e) =>\r\n                    handleSetSongDetails({\r\n                      ...songDetails,\r\n                      artist: e.target.value,\r\n                    })\r\n                  }\r\n                  endAdornment={\r\n                    <InputAdornment position='end'>\r\n                      <IconButton\r\n                        aria-label='song title'\r\n                        onClick={() =>\r\n                          setEditDetails({\r\n                            ...editDetails,\r\n                            artist: !editDetails.artist,\r\n                          })\r\n                        }\r\n                      >\r\n                        {editDetails.artist ? (\r\n                          <EditOutlined className='w-[18x] h-[18px]' />\r\n                        ) : (\r\n                          <CloseOutlined className='w-[18x] h-[18px]' />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  className={`INPUT [&>textarea]:text-xs [&>label]:text-xs ${\r\n                    editDetails.artist ? '[&::before]:border-0' : ''\r\n                  }`}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n            <div className='col-span-1'>\r\n              <FormControl size='small' variant='standard' fullWidth>\r\n                <InputLabel>Album</InputLabel>\r\n                <Input\r\n                  multiline\r\n                  disabled={editDetails.album}\r\n                  defaultValue={song?.album}\r\n                  onChange={(e) =>\r\n                    handleSetSongDetails({\r\n                      ...songDetails,\r\n                      album: e.target.value,\r\n                    })\r\n                  }\r\n                  endAdornment={\r\n                    <InputAdornment position='end'>\r\n                      <IconButton\r\n                        aria-label='song title'\r\n                        onClick={() =>\r\n                          setEditDetails({\r\n                            ...editDetails,\r\n                            album: !editDetails.album,\r\n                          })\r\n                        }\r\n                      >\r\n                        {editDetails.album ? (\r\n                          <EditOutlined className='w-[18x] h-[18px]' />\r\n                        ) : (\r\n                          <CloseOutlined className='w-[18x] h-[18px]' />\r\n                        )}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  className={`INPUT [&>textarea]:text-xs ${\r\n                    editDetails.album ? '[&::before]:border-0' : ''\r\n                  }`}\r\n                />\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n          <div className='px-4 mb-1 text-xs text-white/60'>Tags</div>\r\n          <div className='px-4 py-2 flex flex-row gap-2 flex-wrap'>\r\n            {songDetails?.tags?.map((tag) => {\r\n              return (\r\n                <Chip\r\n                  label={tag}\r\n                  size='small'\r\n                  onDelete={() => handleDeleteTag(tag)}\r\n                />\r\n              );\r\n            })}\r\n            {!editDetails.tag && (\r\n              <Chip\r\n                variant='outlined'\r\n                label='+ Add Tag'\r\n                size='small'\r\n                onClick={() =>\r\n                  setEditDetails({\r\n                    ...editDetails,\r\n                    tag: true,\r\n                  })\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          <div className='px-4 py-2'>\r\n            <button\r\n              onClick={() => setShowLyrics(!showLyrics)}\r\n              className='px-2 py-1 bg-blue-500 text-white text-xs rounded-sm'\r\n            >\r\n              {showLyrics ? 'Hide' : songDetails.lyrics?.verse ? 'Show' : 'Add'}{' '}\r\n              Lyrics\r\n            </button>\r\n          </div>\r\n\r\n          {editDetails.tag && (\r\n            <NewSongTag\r\n              handleAddTag={handleAddTag}\r\n              tagExist={tagExist}\r\n              setEditDetails={setEditDetails}\r\n            />\r\n          )}\r\n\r\n          {showLyrics && (\r\n            <EditSongTabs\r\n              song={memoizedSong}\r\n              setSongDetails={handleSetSongDetails}\r\n              updating={memoizedUpdating}\r\n            />\r\n          )}\r\n\r\n          <div className='flex flex-row items-center justify-center p-2'>\r\n            <Button\r\n              className='flex-1 bg-green-500 text-white'\r\n              color='success'\r\n              variant='contained'\r\n              disableElevation\r\n            >\r\n              <span className='text-xs text-white' onClick={handleSave}>\r\n                Save Song\r\n              </span>\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </SwipeableDrawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditSong);\r\n","import { Clear, EditOutlined, YouTube } from '@mui/icons-material';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Tab,\r\n  TextField,\r\n} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\nimport LazyLoad from 'react-lazyload';\r\nimport SPOTIFY_LOGO from '../../../assets/spotify_logo.png';\r\n\r\nconst EditSongTabs = ({ song, setSongDetails, updating }) => {\r\n  const [value, setValue] = useState('1');\r\n\r\n  console.log('EDIT SONG TABS');\r\n\r\n  return (\r\n    <TabContext value={value}>\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n        <TabList onChange={(e, newValue) => setValue(newValue)}>\r\n          <Tab label='Lyrics' value='1' className='text-xs' />\r\n          <Tab label='Chords' value='2' className='text-xs' />\r\n          <Tab label='Media' value='3' className='text-xs' />\r\n        </TabList>\r\n      </Box>\r\n      <TabPanel value='1'>\r\n        <SongParts\r\n          part={song?.lyrics}\r\n          lyrics\r\n          setDetails={setSongDetails}\r\n          song={song}\r\n          updating={updating}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value='2'>\r\n        <SongParts\r\n          part={song?.chords}\r\n          setDetails={setSongDetails}\r\n          song={song}\r\n          updating={updating}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value='3' className='p-0'>\r\n        <Media setDetails={setSongDetails} song={song} />\r\n      </TabPanel>\r\n    </TabContext>\r\n  );\r\n};\r\n\r\nexport const UrlId = (url) => {\r\n  if (url.includes('spotify')) {\r\n    const id = url?.split('track/')[1].split('?')[0];\r\n    console.log({ id });\r\n    // <iframe style=\"border-radius:12px\" src=\"https://open.spotify.com/embed/track/5uj2wWw0gnNqkVqGNWbGrf?utm_source=generator\" width=\"100%\" height=\"80\" frameBorder=\"0\" allowfullscreen=\"\" allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"></iframe>\r\n    const sp_url = `https://open.spotify.com/embed/track/${id}?utm_source=generator&theme=0`;\r\n    return sp_url;\r\n    //https://open.spotify.com/track/0xqQDpsGBrVUhp4LJA4K7f?si=Lq_gp7DRRZCvYLJC0qq8yA&utm_source=copy-link\r\n  } else {\r\n    const id = url?.split('be/')[1];\r\n    const yt_url = `https://www.youtube.com/embed/${id}`;\r\n    return yt_url;\r\n  }\r\n};\r\n\r\nconst Media = React.memo(({ setDetails, song }) => {\r\n  const [ytUrl, setYtURL] = useState(null);\r\n  const [spotifyUrl, setSpotifyURL] = useState(null);\r\n  const [youtube, setYoutube] = useState(null);\r\n  const [spotify, setSpotify] = useState(null);\r\n  const [isEditYt, setIsEditYt] = useState(false);\r\n  const [isEditSpotify, setIsEditSpotify] = useState(false);\r\n  const [value, setValue] = useState('1');\r\n\r\n  const handleURL = (e) => {\r\n    const link = e.target.value;\r\n    if (link.includes('spotify')) {\r\n      const embed_url = UrlId(link);\r\n      setSpotify(link);\r\n      setSpotifyURL(embed_url);\r\n      setDetails({ ...song, media: { ...song?.media, spotify: embed_url } });\r\n    } else {\r\n      const embed_url = UrlId(link);\r\n      setYoutube(link);\r\n      setYtURL(embed_url);\r\n      setDetails({ ...song, media: { ...song?.media, youtube: embed_url } });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log({ song });\r\n    if (song?.media?.youtube && !ytUrl) {\r\n      // const value = UrlId(song?.media?.youtube);\r\n      setYtURL(song?.media?.youtube);\r\n      setYoutube(song?.media?.youtube);\r\n    } else if (song?.media?.spotify && !spotifyUrl) {\r\n      setSpotifyURL(song?.media?.spotify);\r\n      setSpotify(song?.media?.spotify);\r\n    }\r\n  }, [song]);\r\n\r\n  useEffect(() => {\r\n    console.log({ ytUrl, spotifyUrl });\r\n  }, [ytUrl, spotifyUrl]);\r\n\r\n  return (\r\n    <div className='max-w-[100%] mt-4'>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <TabList onChange={(e, newValue) => setValue(newValue)}>\r\n            <Tab\r\n              label={\r\n                <div className='flex flex-row items-center gap-2'>\r\n                  <YouTube color='error' /> YouTube\r\n                </div>\r\n              }\r\n              value='1'\r\n              className='text-xs'\r\n            />\r\n            <Tab\r\n              label={\r\n                <div className='flex flex-row items-center gap-2'>\r\n                  <img src={SPOTIFY_LOGO} alt='' className='w-[25px]' /> Spotify\r\n                </div>\r\n              }\r\n              value='2'\r\n              className='text-xs'\r\n            />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value='1'>\r\n          <div className='flex flex-row gap-2 items-center pb-2 px-0'>\r\n            <TextField\r\n              variant='standard'\r\n              size='small'\r\n              label='Paste Youtube Link'\r\n              fullWidth\r\n              onChange={handleURL}\r\n              disabled={!isEditYt}\r\n              className='YT [&>label]:text-xs [&>div>input]:text-xs'\r\n            />\r\n            <IconButton onClick={() => setIsEditYt(!isEditYt)}>\r\n              {isEditYt ? (\r\n                <Clear fontSize='small' />\r\n              ) : (\r\n                <EditOutlined fontSize='small' />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <LazyLoad>\r\n            <iframe\r\n              className='w-[100%] h-[200px]'\r\n              title='test'\r\n              src={ytUrl}\r\n              frameborder='0'\r\n            />\r\n          </LazyLoad>\r\n        </TabPanel>\r\n\r\n        <TabPanel value='2'>\r\n          <div className='flex flex-row gap-2 items-center pb-2 px-0'>\r\n            <TextField\r\n              variant='standard'\r\n              size='small'\r\n              label='Paste Spotify Link'\r\n              fullWidth\r\n              onChange={handleURL}\r\n              disabled={!isEditSpotify}\r\n              className='SPOTIFY [&>label]:text-xs [&>div>input]:text-xs'\r\n            />\r\n            <IconButton onClick={() => setIsEditSpotify(!isEditSpotify)}>\r\n              {isEditSpotify ? (\r\n                <Clear fontSize='small' />\r\n              ) : (\r\n                <EditOutlined fontSize='small' />\r\n              )}\r\n            </IconButton>\r\n          </div>\r\n          <LazyLoad>\r\n            <iframe\r\n              className='w-[100%] h-[80px]'\r\n              title='test'\r\n              src={spotifyUrl}\r\n              frameborder='0'\r\n              allowfullscreen=''\r\n              allow='autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture'\r\n            />\r\n          </LazyLoad>\r\n        </TabPanel>\r\n      </TabContext>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst SongParts = ({ part, lyrics, setDetails, song, updating }) => {\r\n  const [edit, setEdit] = useState(true);\r\n  const handleChange = (songPart, value) => {\r\n    console.log({ songPart, value });\r\n    lyrics\r\n      ? setDetails({\r\n          ...song,\r\n          lyrics: {\r\n            ...song.lyrics,\r\n            [songPart]: value,\r\n          },\r\n        })\r\n      : setDetails({\r\n          ...song,\r\n          chords: {\r\n            ...song.chords,\r\n            [songPart]: value,\r\n          },\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    updating && setEdit(true);\r\n  }, [updating]);\r\n\r\n  return (\r\n    <div className='flex gap-4 flex-col'>\r\n      <TextField\r\n        variant='standard'\r\n        fullWidth\r\n        label='Verse'\r\n        defaultValue={part?.verse}\r\n        multiline\r\n        className='VERSE [&>div>textarea]:text-sm [&>label]:text-sm'\r\n        maxRows={5}\r\n        // disabled={edit}\r\n        onChange={(e) => handleChange('verse', e.target.value)}\r\n      />\r\n      <TextField\r\n        variant='standard'\r\n        fullWidth\r\n        label='Pre Chorus'\r\n        defaultValue={part?.pre_chorus}\r\n        multiline\r\n        className='VERSE [&>div>textarea]:text-sm [&>label]:text-sm'\r\n        maxRows={5}\r\n        // disabled={edit}\r\n        onChange={(e) => handleChange('pre_chorus', e.target.value)}\r\n      />\r\n      <TextField\r\n        variant='standard'\r\n        fullWidth\r\n        label='Chorus'\r\n        defaultValue={part?.chorus}\r\n        multiline\r\n        className='VERSE [&>div>textarea]:text-sm [&>label]:text-sm'\r\n        maxRows={5}\r\n        // disabled={edit}\r\n        onChange={(e) => handleChange('chorus', e.target.value)}\r\n      />\r\n      <TextField\r\n        variant='standard'\r\n        fullWidth\r\n        label='Bridge'\r\n        defaultValue={part?.bridge}\r\n        multiline\r\n        className='VERSE [&>div>textarea]:text-sm [&>label]:text-sm'\r\n        maxRows={5}\r\n        // disabled={edit}\r\n        onChange={(e) => handleChange('bridge', e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(EditSongTabs);\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useResize = ({ quality = 1 }) => {\r\n  const max_width = 620;\r\n  const max_height = 620;\r\n  const [resized, setResized] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   console.log({ file });\r\n  //   file?.type && processfile();\r\n  // }, [file]);\r\n\r\n  const processfile = (file) => {\r\n    console.log('processfile');\r\n    if (!/image/i.test(file?.type)) {\r\n      alert('File ' + file?.name + ' is not an image.');\r\n      return false;\r\n    }\r\n\r\n    // read the files\r\n    var reader = new FileReader();\r\n    reader.readAsArrayBuffer(file);\r\n\r\n    reader.onload = function (event) {\r\n      // blob stuff\r\n      var blob = new Blob([event.target.result]); // create blob...\r\n      window.URL = window.URL || window.webkitURL;\r\n      var blobURL = window.URL.createObjectURL(blob); // and get it's URL\r\n\r\n      // helper Image object\r\n      var image = new Image();\r\n      image.src = blobURL;\r\n      console.log({ blobURL });\r\n      //preview.appendChild(image); // preview commented out, I am using the canvas instead\r\n      image.onload = function () {\r\n        // have to wait till it's loaded\r\n        var resized = resizeMe(image); // send it to canvas\r\n        console.log({ resized });\r\n        setResized(resized);\r\n      };\r\n    };\r\n  };\r\n\r\n  const resizeMe = (img) => {\r\n    var canvas = document.createElement('canvas');\r\n\r\n    var width = img.width;\r\n    var height = img.height;\r\n\r\n    // calculate the width and height, constraining the proportions\r\n    if (width > height) {\r\n      if (width > max_width) {\r\n        //height *= max_width / width;\r\n        height = Math.round((height *= max_width / width));\r\n        width = max_width;\r\n      }\r\n    } else {\r\n      if (height > max_height) {\r\n        //width *= max_height / height;\r\n        width = Math.round((width *= max_height / height));\r\n        height = max_height;\r\n      }\r\n    }\r\n\r\n    // resize the canvas and draw the image data into it\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.drawImage(img, 0, 0, width, height);\r\n\r\n    return canvas.toDataURL('image/webp', quality); // get the data from canvas as 70% JPG (can be also PNG, etc.)\r\n  };\r\n\r\n  return { resized, processfile, resizeMe };\r\n};\r\n\r\nuseResize.protoTypes = {\r\n  quality: PropTypes.number,\r\n};\r\n\r\nexport default useResize;\r\n"],"names":["status","text","open","className","src","LoadingGif","alt","setOpen","setSelectedCover","selectedCover","setImage","resized","albumCovers","useSelector","selectSongs","useState","img","setImg","useEffect","covers","name","photoURL","anchor","onClose","variant","cols","gap","map","cover","onClick","handleSelect","LazyLoadImage","effect","placeholder","height","title","type","id","accept","onChange","e","target","files","document","querySelector","click","tagExist","setEditDetails","handleAddTag","tag","setTag","TextField","fullWidth","size","label","value","error","helperText","IconButton","disabled","SaveOutlined","editDetails","ClearOutlined","EditSong","drawer","handleCover","isNew","useResize","quality","processfile","song","editTitle","setEditTitle","artist","album","lyrics","chords","media","verse","pre_chorus","chorus","youtube","spotify","tags","songDetails","setSongDetails","newTag","image","setPhotoURL","updating","setUpdating","updated","setUpdated","setTagExist","openCovers","setOpenCovers","showLyrics","setShowLyrics","memoizedUpdating","useMemo","new_tag","memoizedSong","handleSetSongDetails","useCallback","handleUploadCover","UploadAlbumCover","console","log","message","idx","findIndex","toLowerCase","handleSave","UpdateSongDetails","setTimeout","tagArr","split","i","length","charAt","toUpperCase","slice","tag_arr","join","AlbumCover","LoadingScreen","SwipeableDrawer","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","Alert","severity","sx","width","htmlFor","component","AddAPhotoOutlined","ALBUM_PLACEHOLDER","FormControl","InputLabel","Input","multiline","defaultValue","endAdornment","InputAdornment","position","EditOutlined","CloseOutlined","Chip","onDelete","filtered","filter","t","handleDeleteTag","EditSongTabs","Button","color","disableElevation","React","setValue","borderBottom","borderColor","newValue","SongParts","part","setDetails","Media","UrlId","url","includes","ytUrl","setYtURL","spotifyUrl","setSpotifyURL","setYoutube","setSpotify","isEditYt","setIsEditYt","isEditSpotify","setIsEditSpotify","handleURL","link","embed_url","SPOTIFY_LOGO","fontSize","frameborder","allowfullscreen","allow","setEdit","handleChange","songPart","maxRows","bridge","setResized","resizeMe","canvas","createElement","Math","round","getContext","drawImage","toDataURL","file","test","alert","reader","FileReader","readAsArrayBuffer","onload","event","blob","Blob","result","window","URL","webkitURL","blobURL","createObjectURL","Image","protoTypes","PropTypes"],"sourceRoot":""}