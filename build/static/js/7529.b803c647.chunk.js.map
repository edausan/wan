{"version":3,"file":"static/js/7529.b803c647.chunk.js","mappings":"6QAoBA,EAjBoB,WAClB,OACE,UAACA,EAAA,EAAD,CAAMC,UAAU,SAASC,WAAS,EAAlC,WACE,iBAAKD,UAAU,0BAAf,WACE,SAACE,EAAA,EAAD,CAAUC,QAAQ,WAAWC,MAAO,GAAIC,OAAQ,MAChD,SAACH,EAAA,EAAD,CAAUC,QAAQ,OAAOC,MAAM,YAEjC,SAACF,EAAA,EAAD,CAAUC,QAAQ,cAAcC,MAAM,OAAOC,OAAQ,OAErD,iBAAKL,UAAU,MAAf,WACE,SAACE,EAAA,EAAD,CAAUC,QAAQ,OAAOC,MAAM,UAC/B,SAACF,EAAA,EAAD,CAAUC,QAAQ,OAAOC,MAAM,eCiBjCE,EAAOC,EAAAA,MAAW,kBAAM,iIAExBC,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,GAAOC,EAAAA,EAAAA,IAAQC,EAAAA,GACfC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAjCC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UACPC,GAAgBJ,EAAAA,EAAAA,IAAYK,EAAAA,IAA5BD,YACFE,GAASC,EAAAA,EAAAA,MACf,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,cAEP,CAACR,EAAWD,KAEfS,EAAAA,EAAAA,YAAU,WACR,GAAIjB,IAAiB,OAANY,QAAM,IAANA,OAAA,EAAAA,EAAQM,MAAOR,EAAYS,KAAKC,IAAK,CAClD,IAAMC,EAAIb,EAAMc,QAAO,SAACD,GAAD,OAAOA,EAAEE,KAAKH,OAAP,OAAeR,QAAf,IAAeA,OAAf,EAAeA,EAAQM,OACrDM,QAAQC,IAAI,cAAe,CAAEC,MAAOL,IACpCL,EAAYK,QACP,GAAIrB,IAAiB,OAANY,QAAM,IAANA,OAAA,EAAAA,EAAQM,MAAOR,EAAYS,KAAKC,IACpDI,QAAQC,IAAI,aAAc,CAAEhB,UAAAA,IAC5BO,EAAYP,OACP,CACL,IAAMY,EAAIb,EAAMc,QAAO,SAACD,GAAD,eAAQ,OAADA,QAAC,IAADA,GAAA,UAAAA,EAAGE,YAAH,eAASH,QAAT,OAAiBnB,QAAjB,IAAiBA,GAAjB,UAAiBA,EAAMS,mBAAvB,aAAiB,EAAmBU,QAClEhB,GAASuB,EAAAA,EAAAA,IAAaN,IACtBL,EAAYR,MAEb,CAACI,KAGF,+BAoBE,oBACErB,UAAS,uCACPS,EAAU,IAAM,QADT,YADX,SAKGe,EACEa,QACAC,MACC,SAACC,EAAGC,GAAJ,OACE,IAAIC,KAAKD,EAAER,KAAKU,cAAgB,IAAID,KAAKF,EAAEP,KAAKU,iBAEnDC,KAAI,SAACX,GAEJ,OACE,SAAC,EAAAY,SAAD,CAAwBC,UAAU,SAAC,EAAD,IAAlC,UACE,SAACvC,EAAD,CAAM0B,KAAMA,KADCA,EAAKL,YA2BlC,EAAepB,EAAAA,KAAWC","sources":["components/Pages/Home/PostLoading.js","components/Pages/Home/PostsMain.js"],"sourcesContent":["import { Card, Skeleton } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst PostLoading = () => {\r\n  return (\r\n    <Card className='w-full' fullWidth>\r\n      <div className='flex flex-row p-3 gap-3'>\r\n        <Skeleton variant='circular' width={40} height={40} />\r\n        <Skeleton variant='text' width='45%' />\r\n      </div>\r\n      <Skeleton variant='rectangular' width='100%' height={100} />\r\n\r\n      <div className='p-3'>\r\n        <Skeleton variant='text' width='100%' />\r\n        <Skeleton variant='text' width='55%' />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostLoading;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { getAuth } from 'firebase/auth';\r\nimport React, { useEffect, useState, Suspense } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { FirebaseApp } from '../../../Firebase';\r\nimport { selectPost, setUserPosts } from '../../../redux/slices/postsSlice';\r\nimport { selectUsers } from '../../../redux/slices/usersSlice';\r\nimport PostLoading from './PostLoading';\r\n// import { FixedSizeList as List } from \"react-window\";\r\n// import InfiniteLoader from \"react-window-infinite-loader\";\r\n\r\n// const LOADING = 1;\r\n// const LOADED = 2;\r\n// let itemStatusMap = {};\r\n\r\n// const isItemLoaded = index => !!itemStatusMap[index];\r\n// const loadMoreItems = (startIndex, stopIndex) => {\r\n//   for (let index = startIndex; index <= stopIndex; index++) {\r\n//     itemStatusMap[index] = LOADING;\r\n//   }\r\n//   return new Promise(resolve =>\r\n//     setTimeout(() => {\r\n//       for (let index = startIndex; index <= stopIndex; index++) {\r\n//         itemStatusMap[index] = LOADED;\r\n//       }\r\n//       resolve();\r\n//     }, 2500)\r\n//   );\r\n// };\r\n\r\nconst Post = React.lazy(() => import('./Post'));\r\n\r\nconst PostsMain = ({ profile }) => {\r\n  const auth = getAuth(FirebaseApp);\r\n  const dispatch = useDispatch();\r\n  const { posts, userPosts } = useSelector(selectPost);\r\n  const { currentUser } = useSelector(selectUsers);\r\n  const params = useParams();\r\n  const [allPosts, setAllPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log({ userPosts, posts });\r\n  }, [userPosts, posts]);\r\n\r\n  useEffect(() => {\r\n    if (profile && params?.id !== currentUser.user.uid) {\r\n      const p = posts.filter((p) => p.post.uid === params?.id);\r\n      console.log('OTHER POSTS', { other: p });\r\n      setAllPosts(p);\r\n    } else if (profile && params?.id === currentUser.user.uid) {\r\n      console.log('USER POSTS', { userPosts });\r\n      setAllPosts(userPosts);\r\n    } else {\r\n      const p = posts.filter((p) => p?.post?.uid === auth?.currentUser?.uid);\r\n      dispatch(setUserPosts(p));\r\n      setAllPosts(posts);\r\n    }\r\n  }, [params]);\r\n\r\n  return (\r\n    <>\r\n      {/* <InfiniteLoader\r\n        isItemLoaded={isItemLoaded}\r\n        itemCount={1000}\r\n        loadMoreItems={loadMoreItems}\r\n      >\r\n        {({ onItemsRendered, ref }) => (\r\n          <List\r\n            className=\"List\"\r\n            height={150}\r\n            itemCount={1000}\r\n            itemSize={30}\r\n            onItemsRendered={onItemsRendered}\r\n            ref={ref}\r\n            width={300}\r\n          >\r\n            {Row}\r\n          </List>\r\n        )}\r\n      </InfiniteLoader> */}\r\n      <section\r\n        className={`flex flex-col gap-3 mt-2 pb-[${\r\n          profile ? '0' : '200px'\r\n        }] w-full`}\r\n      >\r\n        {allPosts\r\n          .slice()\r\n          .sort(\r\n            (a, b) =>\r\n              new Date(b.post.date_created) - new Date(a.post.date_created)\r\n          )\r\n          .map((post) => {\r\n            // console.log({ post });\r\n            return (\r\n              <Suspense key={post.id} fallback={<PostLoading />}>\r\n                <Post post={post} />\r\n              </Suspense>\r\n            );\r\n          })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\n// class Row extends PureComponent {\r\n//   render() {\r\n//     const { index, style } = this.props;\r\n//     let label;\r\n//     if (itemStatusMap[index] === LOADED) {\r\n//       label = `Row ${index}`;\r\n//     } else {\r\n//       label = \"Loading...\";\r\n//     }\r\n//     return (\r\n//       <div className=\"ListItem\" style={style}>\r\n//         {label}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default React.memo(PostsMain);\r\n"],"names":["Card","className","fullWidth","Skeleton","variant","width","height","Post","React","PostsMain","profile","auth","getAuth","FirebaseApp","dispatch","useDispatch","useSelector","selectPost","posts","userPosts","currentUser","selectUsers","params","useParams","useState","allPosts","setAllPosts","useEffect","id","user","uid","p","filter","post","console","log","other","setUserPosts","slice","sort","a","b","Date","date_created","map","Suspense","fallback"],"sourceRoot":""}