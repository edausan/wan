{"version":3,"file":"static/js/2375.aed0868d.chunk.js","mappings":"kLAEA,GAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,mDACD,oB,oGCUEC,EAAe,SAAC,GAOf,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,OACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,KACAC,EACI,EADJA,QAEQC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAA5BF,YAER,OACE,SAACG,EAAA,EAAD,CAAiBL,KAAMA,EAAMM,QAAS,kBAAML,GAAQ,IAAQM,OAAO,SAAnE,UACE,iBAAKC,UAAU,0BAAf,WACE,UAACC,EAAA,EAAD,CAAaC,QAAQ,WAAWC,WAAS,EAAzC,WACE,SAACC,EAAA,EAAD,CAAYC,GAAG,SAAf,+BACA,UAACC,EAAA,EAAD,CACEC,QAAQ,SACRC,MAAM,mBACNC,KAAK,QACLC,OACkD,IAAhDtB,EAAQuB,WAAU,SAACC,GAAD,OAAOA,IAAMtB,KAC3B,KACAA,EAENuB,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOL,QACxCV,UAAU,iCAVZ,WAYE,SAACgB,EAAA,EAAD,CAAUN,MAAO,KAAjB,UACE,iBAAMV,UAAU,UAAhB,oBAEDZ,EAAQ6B,KAAI,SAACC,GACZ,OACE,SAACF,EAAA,EAAD,CAAuBN,MAAOQ,EAA9B,UACE,iBAAMlB,UAAU,UAAhB,SAA2BkB,KADdA,aAQvB,UAACjB,EAAA,EAAD,CAAaC,QAAQ,WAAWC,WAAS,EAAzC,WACE,SAACC,EAAA,EAAD,+BACA,UAACE,EAAA,EAAD,CACEE,MAAM,kBACNC,KAAK,QACLC,OACiD,IAA/CrB,EAAOsB,WAAU,SAACC,GAAD,OAAOA,IAAMtB,KAC1B,KACAA,EAENuB,SAAU,SAACC,GAAD,OAAOvB,EAAcuB,EAAEC,OAAOL,QACxCV,UAAU,gCATZ,WAWE,SAACgB,EAAA,EAAD,CAAUN,MAAO,KAAjB,UACE,iBAAKV,UAAU,mCAAf,WACE,gBAAKA,UAAU,iDAAf,UACE,gBACEmB,IAAKC,EACLC,IAAK,cACLrB,UAAU,cAGd,iBAAMA,UAAU,UAAhB,uBAGHX,EAAO4B,KAAI,SAACK,GACX,IAAMC,EAAQ7B,EAAY8B,QAAO,SAACD,GAAD,oBAC/BA,QAD+B,IAC/BA,GAD+B,UAC/BA,EAAOE,YADwB,aAC/B,EAAaC,cAAcC,SAASL,EAAMI,kBAC1C,GACF,OACE,SAACV,EAAA,EAAD,CAAsBN,MAAOY,EAA7B,UACE,iBAAKtB,UAAU,mCAAf,WACE,gBAAKA,UAAU,iDAAf,UACE,gBACEmB,IACO,OAALI,QAAK,IAALA,GAAAA,EAAOK,SAAP,OAAkBL,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOK,SAAWR,EAEtCC,KAAU,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOE,OAAQ,cACpBzB,UAAU,cAGd,iBAAMA,UAAU,UAAhB,SAA2BsB,QAXhBA,aAmBvB,SAACO,EAAA,EAAD,CACEC,WAAW,SAACC,EAAD,IACXC,QAAS,kBAAMzC,EAAc,OAC7BS,UAAU,wBAHZ,gCAYR,EAAeiC,EAAAA,KAAW9C","sources":["../node_modules/@mui/icons-material/esm/ClearAllOutlined.js","components/Pages/Songs/FilterDrawer.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M5 13h14v-2H5v2zm-2 4h14v-2H3v2zM7 7v2h14V7H7z\"\n}), 'ClearAllOutlined');","import { ClearAllOutlined } from '@mui/icons-material';\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SwipeableDrawer,\r\n} from '@mui/material';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectSongs } from '../../../redux/slices/songsSlice';\r\nimport ALBUM_PLACEHOLDER from '../../../assets/music_placeholder.jpg';\r\n\r\nconst FilterDrawer = ({\r\n  artists,\r\n  albums,\r\n  searchText,\r\n  setSearchText,\r\n  open,\r\n  setOpen,\r\n}) => {\r\n  const { albumCovers } = useSelector(selectSongs);\r\n\r\n  return (\r\n    <SwipeableDrawer open={open} onClose={() => setOpen(false)} anchor='bottom'>\r\n      <div className='flex flex-col gap-4 p-6'>\r\n        <FormControl variant='standard' fullWidth>\r\n          <InputLabel id='arists'>Filter by Artist</InputLabel>\r\n          <Select\r\n            labelId='arists'\r\n            label='Filter by Artist'\r\n            size='small'\r\n            value={\r\n              artists.findIndex((a) => a === searchText) === -1\r\n                ? null\r\n                : searchText\r\n            }\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className='ARTIST [&>div]:!pb-1 items-end'\r\n          >\r\n            <MenuItem value={null}>\r\n              <span className='text-xs'>None</span>\r\n            </MenuItem>\r\n            {artists.map((artist) => {\r\n              return (\r\n                <MenuItem key={artist} value={artist}>\r\n                  <span className='text-xs'>{artist}</span>\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl variant='standard' fullWidth>\r\n          <InputLabel>Filter by Album</InputLabel>\r\n          <Select\r\n            label='Filter by Album'\r\n            size='small'\r\n            value={\r\n              albums.findIndex((a) => a === searchText) === -1\r\n                ? null\r\n                : searchText\r\n            }\r\n            onChange={(e) => setSearchText(e.target.value)}\r\n            className='ALBUM [&>div]:!pb-1 items-end'\r\n          >\r\n            <MenuItem value={null}>\r\n              <div className='flex flex-row gap-2 items-center'>\r\n                <div className='w-[24px] h-[24px] rounded-full overflow-hidden'>\r\n                  <img\r\n                    src={ALBUM_PLACEHOLDER}\r\n                    alt={'Album Cover'}\r\n                    className='w-full'\r\n                  />\r\n                </div>\r\n                <span className='text-xs'>None</span>\r\n              </div>\r\n            </MenuItem>\r\n            {albums.map((album) => {\r\n              const cover = albumCovers.filter((cover) =>\r\n                cover?.name?.toLowerCase().includes(album.toLowerCase())\r\n              )[0];\r\n              return (\r\n                <MenuItem key={album} value={album}>\r\n                  <div className='flex flex-row gap-2 items-center'>\r\n                    <div className='w-[24px] h-[24px] rounded-full overflow-hidden'>\r\n                      <img\r\n                        src={\r\n                          cover?.photoURL ? cover?.photoURL : ALBUM_PLACEHOLDER\r\n                        }\r\n                        alt={cover?.name || 'Album Cover'}\r\n                        className='w-full'\r\n                      />\r\n                    </div>\r\n                    <span className='text-xs'>{album}</span>\r\n                  </div>\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Button\r\n          startIcon={<ClearAllOutlined />}\r\n          onClick={() => setSearchText(null)}\r\n          className='bg-sky-500 text-white'\r\n        >\r\n          Clear filter\r\n        </Button>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default React.memo(FilterDrawer);\r\n"],"names":["createSvgIcon","_jsx","d","FilterDrawer","artists","albums","searchText","setSearchText","open","setOpen","albumCovers","useSelector","selectSongs","SwipeableDrawer","onClose","anchor","className","FormControl","variant","fullWidth","InputLabel","id","Select","labelId","label","size","value","findIndex","a","onChange","e","target","MenuItem","map","artist","src","ALBUM_PLACEHOLDER","alt","album","cover","filter","name","toLowerCase","includes","photoURL","Button","startIcon","ClearAllOutlined","onClick","React"],"sourceRoot":""}