{"version":3,"file":"static/js/944.7046f0f0.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ContentCopy.js","components/Lineup/SongDetailsDrawer.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');","import { ContentCopy, YouTube } from '@mui/icons-material';\r\nimport { TabContext, TabList, TabPanel } from '@mui/lab';\r\nimport {\r\n  Alert,\r\n  Box,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Skeleton,\r\n  Snackbar,\r\n  SwipeableDrawer,\r\n  Tab,\r\n  TextField,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport LazyLoad from 'react-lazyload';\r\nimport SPOTIFY_LOGO from '../../assets/spotify_logo.png';\r\n\r\nconst SongDetailsDrawer = ({\r\n  expanded,\r\n  handleExpandClick,\r\n  handleClose,\r\n  drawerData,\r\n}) => {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    const verse = document.querySelector('#verse');\r\n    const pre_chorus = document.querySelector('#pre-chorus');\r\n    const chorus = document.querySelector('#chorus');\r\n\r\n    navigator.clipboard.writeText(\r\n      `${verse ? `Verse:\\r\\n${verse.innerHTML}\\r\\n\\r\\n` : ''}${\r\n        pre_chorus ? `Pre-chorus:\\r\\n${pre_chorus.innerHTML}\\r\\n\\r\\n` : ''\r\n      }${chorus ? `Chorus:\\r\\n${chorus.innerHTML}` : ''}`\r\n    );\r\n\r\n    setOpen(true);\r\n\r\n    setTimeout(() => {\r\n      setOpen(false);\r\n    }, 1000);\r\n  };\r\n\r\n  console.log(`SONG DETAILS`);\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      anchor='right'\r\n      open={expanded}\r\n      onClose={() => handleExpandClick({ song: null, id: null })}\r\n      sx={{\r\n        '& > .MuiDrawer-paper': {\r\n          background: `${theme.palette.background.default}`,\r\n        },\r\n      }}\r\n    >\r\n      <List>\r\n        <ListItem>\r\n          <ListItemText\r\n            primary='Song Title:'\r\n            secondary={\r\n              <div>\r\n                <div style={{ marginBottom: 8 }}>\r\n                  <strong>{drawerData?.song?.title}</strong>\r\n                </div>\r\n                <div>\r\n                  <small style={{ textTransform: 'capitalize' }}>\r\n                    <span style={{ color: theme.palette.text.secondary }}>\r\n                      Artist:\r\n                    </span>{' '}\r\n                    {drawerData?.song?.artist}\r\n                  </small>\r\n                </div>\r\n                <div>\r\n                  <small style={{ textTransform: 'capitalize' }}>\r\n                    <span style={{ color: theme.palette.text.secondary }}>\r\n                      Album:\r\n                    </span>{' '}\r\n                    {drawerData?.song?.album}\r\n                  </small>\r\n                </div>\r\n              </div>\r\n            }\r\n            primaryTypographyProps={{\r\n              sx: {\r\n                fontSize: '0.875rem',\r\n                color: theme.palette.text.primary,\r\n                opacity: 0.7,\r\n              },\r\n            }}\r\n            secondaryTypographyProps={{\r\n              sx: {\r\n                fontSize: '1rem',\r\n                color: theme.palette.text.primary,\r\n                textTransform: 'uppercase',\r\n              },\r\n            }}\r\n          />\r\n        </ListItem>\r\n      </List>\r\n\r\n      {(drawerData?.song?.media?.youtube ||\r\n        drawerData?.song?.media?.spotify) && (\r\n        <Media media={drawerData?.song?.media} />\r\n      )}\r\n      <Box sx={{ width: 320, px: 2 }}>\r\n        <Snackbar\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={handleClose}\r\n          anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          sx={{ zIndex: 2 }}\r\n        >\r\n          <Alert\r\n            onClose={handleClose}\r\n            severity='success'\r\n            sx={{ width: '100%' }}\r\n          >\r\n            Copied!\r\n          </Alert>\r\n        </Snackbar>\r\n        <List>\r\n          {(drawerData?.song?.lyrics?.verse ||\r\n            drawerData?.song?.chords?.verse) && (\r\n            <ListItem>\r\n              <ListItemText\r\n                primary='Verse:'\r\n                secondary={\r\n                  <TextField\r\n                    id='verse'\r\n                    value={\r\n                      drawerData.id === 'Lyrics'\r\n                        ? drawerData?.song?.lyrics?.verse\r\n                        : drawerData?.song?.chords?.verse\r\n                    }\r\n                    fullWidth\r\n                    disabled\r\n                    variant='standard'\r\n                    multiline\r\n                    sx={{\r\n                      '& textarea.Mui-disabled': {\r\n                        '-webkit-text-fill-color': theme.palette.text.primary,\r\n                        textTransform: 'uppercase',\r\n                      },\r\n                      '& > .Mui-disabled:before': {\r\n                        borderBottomStyle: 'none !important',\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                primaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '0.875rem',\r\n                    color: theme.palette.text.primary,\r\n                    opacity: 0.7,\r\n                  },\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '1rem',\r\n                    color: theme.palette.text.primary,\r\n                    textTransform: 'uppercase',\r\n                  },\r\n                }}\r\n              />\r\n            </ListItem>\r\n          )}\r\n\r\n          {(drawerData?.song?.lyrics?.pre_chorus ||\r\n            drawerData?.song?.chords?.pre_chorus) && (\r\n            <ListItem>\r\n              <ListItemText\r\n                secondary={\r\n                  <TextField\r\n                    id='pre-chorus'\r\n                    value={\r\n                      drawerData.id === 'Lyrics'\r\n                        ? drawerData?.song?.lyrics?.pre_chorus\r\n                        : drawerData?.song?.chords?.pre_chorus\r\n                    }\r\n                    fullWidth\r\n                    disabled\r\n                    variant='standard'\r\n                    multiline\r\n                    sx={{\r\n                      '& textarea.Mui-disabled': {\r\n                        '-webkit-text-fill-color': theme.palette.text.primary,\r\n                        textTransform: 'uppercase',\r\n                      },\r\n                      '& > .Mui-disabled:before': {\r\n                        borderBottomStyle: 'none !important',\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                primary='Pre-chorus:'\r\n                primaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '0.875rem',\r\n                    color: theme.palette.text.primary,\r\n                    opacity: 0.7,\r\n                  },\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '1rem',\r\n                    color: theme.palette.text.primary,\r\n                    textTransform: 'uppercase',\r\n                  },\r\n                }}\r\n              />\r\n            </ListItem>\r\n          )}\r\n\r\n          {(drawerData?.song?.lyrics?.chorus ||\r\n            drawerData?.song?.chords?.chorus) && (\r\n            <ListItem>\r\n              <ListItemText\r\n                secondary={\r\n                  <TextField\r\n                    id='chorus'\r\n                    value={\r\n                      drawerData.id === 'Lyrics'\r\n                        ? drawerData?.song?.lyrics?.chorus\r\n                        : drawerData?.song?.chords?.chorus\r\n                    }\r\n                    fullWidth\r\n                    disabled\r\n                    variant='standard'\r\n                    multiline\r\n                    sx={{\r\n                      '& textarea.Mui-disabled': {\r\n                        '-webkit-text-fill-color': theme.palette.text.primary,\r\n                        textTransform: 'uppercase',\r\n                      },\r\n                      '& > .Mui-disabled:before': {\r\n                        borderBottomStyle: 'none !important',\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                primary='Chorus:'\r\n                primaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '0.875rem',\r\n                    color: theme.palette.text.primary,\r\n                    opacity: 0.7,\r\n                  },\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '1rem',\r\n                    color: theme.palette.text.primary,\r\n                    textTransform: 'uppercase',\r\n                  },\r\n                }}\r\n              />\r\n            </ListItem>\r\n          )}\r\n\r\n          {(drawerData?.song?.lyrics?.bridge ||\r\n            drawerData?.song?.chords?.bridge) && (\r\n            <ListItem>\r\n              <ListItemText\r\n                secondary={\r\n                  <TextField\r\n                    id='bridge'\r\n                    value={\r\n                      drawerData.id === 'Lyrics'\r\n                        ? drawerData?.song?.lyrics?.bridge\r\n                        : drawerData?.song?.chords?.bridge\r\n                    }\r\n                    fullWidth\r\n                    disabled\r\n                    variant='standard'\r\n                    multiline\r\n                    sx={{\r\n                      '& textarea.Mui-disabled': {\r\n                        '-webkit-text-fill-color': theme.palette.text.primary,\r\n                        textTransform: 'uppercase',\r\n                      },\r\n                      '& > .Mui-disabled:before': {\r\n                        borderBottomStyle: 'none !important',\r\n                      },\r\n                    }}\r\n                  />\r\n                }\r\n                primary='Bridge:'\r\n                primaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '0.875rem',\r\n                    color: theme.palette.text.primary,\r\n                    opacity: 0.7,\r\n                  },\r\n                }}\r\n                secondaryTypographyProps={{\r\n                  sx: {\r\n                    fontSize: '1rem',\r\n                    color: theme.palette.text.primary,\r\n                    textTransform: 'uppercase',\r\n                  },\r\n                }}\r\n              />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n\r\n        <div style={{ textAlign: 'right' }}>\r\n          <Button onClick={handleCopy} startIcon={<ContentCopy />}>\r\n            Copy\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nconst Media = ({ media }) => {\r\n  const [value, setValue] = useState('1');\r\n  const handleSpotify = (url) => {\r\n    if (url.includes('copy-link')) {\r\n      const new_url = `${url.split('?')[0]}?utm_source=generator&theme=0`;\r\n      return new_url;\r\n    }\r\n\r\n    return url;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TabContext value={value}>\r\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n          <TabList onChange={(e, newValue) => setValue(newValue)}>\r\n            <Tab\r\n              disabled={!media?.youtube}\r\n              label={\r\n                <div className='flex flex-row items-center gap-2'>\r\n                  <YouTube\r\n                    color='error'\r\n                    className={`${!media?.youtube ? 'text-white/25' : ''}`}\r\n                  />{' '}\r\n                  YouTube\r\n                </div>\r\n              }\r\n              value='1'\r\n              className='text-xs'\r\n            />\r\n            <Tab\r\n              disabled={!media?.spotify}\r\n              label={\r\n                <div className='flex flex-row items-center gap-2'>\r\n                  <img\r\n                    src={SPOTIFY_LOGO}\r\n                    alt=''\r\n                    className={`w-[25px] ${\r\n                      !media?.spotify ? 'grayscale opacity-30' : ''\r\n                    }`}\r\n                  />{' '}\r\n                  Spotify\r\n                </div>\r\n              }\r\n              value='2'\r\n              className='text-xs'\r\n            />\r\n          </TabList>\r\n        </Box>\r\n        <TabPanel value='1' className='p-0'>\r\n          {media?.youtube && (\r\n            <LazyLoad>\r\n              <iframe\r\n                className='w-[100%] h-[160px]'\r\n                title='test'\r\n                src={media?.youtube}\r\n                frameborder='0'\r\n                allowfullscreen=''\r\n                allow='autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture'\r\n              />\r\n            </LazyLoad>\r\n          )}\r\n        </TabPanel>\r\n        <TabPanel value='2' className='p-0'>\r\n          {media?.spotify && (\r\n            <LazyLoad>\r\n              <iframe\r\n                className='w-[100%] h-[80px]'\r\n                title='test'\r\n                src={handleSpotify(media?.spotify)}\r\n                frameborder='0'\r\n                allowfullscreen=''\r\n                allow='autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture'\r\n              />\r\n            </LazyLoad>\r\n          )}\r\n        </TabPanel>\r\n      </TabContext>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(SongDetailsDrawer);\r\n"],"names":["createSvgIcon","_jsx","d","SongDetailsDrawer","expanded","handleExpandClick","handleClose","drawerData","theme","useTheme","useState","open","setOpen","console","log","SwipeableDrawer","anchor","onClose","song","id","sx","background","palette","default","List","ListItem","ListItemText","primary","secondary","style","marginBottom","title","textTransform","color","text","artist","album","primaryTypographyProps","fontSize","opacity","secondaryTypographyProps","media","youtube","spotify","Media","Box","width","px","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","zIndex","Alert","severity","lyrics","verse","chords","TextField","value","fullWidth","disabled","variant","multiline","borderBottomStyle","pre_chorus","chorus","bridge","textAlign","Button","onClick","document","querySelector","navigator","clipboard","writeText","innerHTML","setTimeout","startIcon","ContentCopy","url","setValue","TabContext","borderBottom","borderColor","TabList","onChange","e","newValue","Tab","label","className","YouTube","src","SPOTIFY_LOGO","alt","TabPanel","frameborder","allowfullscreen","allow","includes","split","React"],"sourceRoot":""}